# Generated by Django 3.1.2 on 2020-12-12 22:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ECTS', models.IntegerField()),
                ('course_name', models.CharField(max_length=33)),
                ('type', models.CharField(choices=[('W', 'wykład'), ('C', 'ćwiczenia'), ('L', 'laboratoria')], max_length=1)),
                ('final', models.FloatField(blank=True, default=0)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('surname', models.CharField(max_length=30)),
                ('title', models.CharField(max_length=30)),
                ('webpage', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name_plural': 'Teacher',
            },
        ),
        migrations.CreateModel(
            name='CourseGroup',
            fields=[
                ('course_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='studentHelper.course')),
                ('weight', models.FloatField()),
                ('minimum', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('event_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='studentHelper.events')),
                ('course', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Thresholds',
            fields=[
                ('course_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='studentHelper.course')),
                ('k_2_0', models.FloatField()),
                ('p_2_5', models.FloatField()),
                ('k_2_5', models.FloatField()),
                ('p_3_0', models.FloatField()),
                ('k_3_0', models.FloatField()),
                ('p_3_5', models.FloatField()),
                ('k_3_5', models.FloatField()),
                ('p_4_0', models.FloatField()),
                ('k_4_0', models.FloatField()),
                ('p_4_5', models.FloatField()),
                ('k_4_5', models.FloatField()),
                ('p_5_0', models.FloatField()),
                ('k_5_0', models.FloatField()),
                ('p_5_5', models.FloatField()),
                ('type', models.CharField(choices=[('POINT', 'punkty'), ('MARK', 'ocena'), ('PERC', 'procent')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('pred_time', models.TimeField()),
                ('actual_time', models.TimeField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.course')),
            ],
        ),
        migrations.CreateModel(
            name='Modyfication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mod', models.CharField(choices=[('MINUS', '-'), ('PLUS', '+')], max_length=5)),
                ('val', models.FloatField()),
                ('type', models.CharField(choices=[('POINT', 'punkty'), ('MARK', 'ocena'), ('PERC', 'procent')], max_length=5)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.course')),
            ],
        ),
        migrations.CreateModel(
            name='Marks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('mark_type', models.CharField(choices=[('PLUS', '+'), ('MINUS', '-'), ('PKT', 'pkt'), ('MARK', 'ocena')], max_length=7)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.course')),
            ],
        ),
        migrations.CreateModel(
            name='Goals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField()),
                ('type', models.CharField(choices=[('A', 'aktywność'), ('M', 'ocena'), ('O', 'inne')], max_length=1)),
                ('description', models.CharField(max_length=128)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.course')),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=64)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.course')),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('period_type', models.CharField(choices=[('ONCE', 'Pojedyncze wydarzenie'), ('DAILY', 'Codziennie'), ('WEEKLY', 'Co tydzień'), ('MONTHLY', 'Co miesiąc'), ('YEARLY', 'Rocznie')], max_length=7)),
                ('whole_day', models.BooleanField(default=False)),
                ('client_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='teacher_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.teacher'),
        ),
        migrations.CreateModel(
            name='Components',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(choices=[('ACTIV', 'aktywność'), ('EXAM', 'egzamin'), ('QUIZ', 'kartkówka'), ('TEST', 'kolokwium'), ('LIST', 'lista zadań')], max_length=5)),
                ('type', models.CharField(choices=[('POINT', 'punkty'), ('MARK', 'ocena'), ('PERC', 'procent')], max_length=5)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studentHelper.course')),
            ],
        ),
    ]
